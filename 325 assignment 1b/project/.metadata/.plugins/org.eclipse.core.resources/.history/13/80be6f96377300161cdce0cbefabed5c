package nz.ac.auckland.musician.services;

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.atomic.AtomicInteger;

import javax.ws.rs.Path;

import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import nz.ac.auckland.musician.domain.Musician;
import nz.ac.auckland.parolee.domain.Parolee;
import nz.ac.auckland.parolee.services.ParoleeResource;

@Path("/musicians")
public class MusicianResource {
	// Setup a Logger.
	private static Logger logger = LoggerFactory.getLogger(ParoleeResource.class);

	// A list of all musicians in the system
	private Map<Integer, Parolee> musicianDB = new ConcurrentHashMap<Integer, Parolee>();
	
	// A counter to keep track of how many ids have been allocated to 
	//avoid having multiple users with the same ID
	private AtomicInteger idCounter = new AtomicInteger();
		
	
	protected void outputMusician(OutputStream os, Musician musician) throws IOException{
		DateTimeFormatter formatter = DateTimeFormat.forPattern("dd/MM/yyyy");
		String dateOfBirth = formatter.print(musician.getDateOfBirth());
		
		PrintStream writer = new PrintStream(os);
		writer.println("<parolee id=\"" + musician.getId() + "\">");
		writer.println("   <first-name>" + musician.getFirstname()
				+ "</first-name>");
		writer.println("   <last-name>" + musician.getLastname()
				+ "</last-name>");
		writer.println("   <gender>" + musician.getGender() + "</gender>");
		writer.println("   <instrument>" + musician.getMainInstrument() +"</instrument>");
		writer.println("   <experience>" + musician.getSkillLevel()+ "</experience>")
		writer.println("   <date-of-birth>" + dateOfBirth + "</date-of-birth>");
		writer.println("   <band>" + musician.getBand() + "</band>");
		writer.println("</parolee>");
	}
}
