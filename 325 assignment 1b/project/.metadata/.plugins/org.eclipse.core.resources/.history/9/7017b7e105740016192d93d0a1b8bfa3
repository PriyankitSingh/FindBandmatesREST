package nz.ac.auckland.parolee.test;

import static org.junit.Assert.*;

import java.util.Calendar;

import javax.persistence.EntityManagerFactory;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import nz.ac.auckland.musician.domain.Experience;
import nz.ac.auckland.musician.domain.Instrument;
import nz.ac.auckland.musician.domain.Musician;
import nz.ac.auckland.musician.domain.PersistanceManager2;
import nz.ac.auckland.parolee.domain.Gender;

public class MusicianPersistanceTest {
	
	private Logger logger = LoggerFactory.getLogger(MusicianPersistanceTest.class);
	private EntityManagerFactory entityManagerFactory;
	
	/**
	 * Runs before each test to create a new EntityManagerFactory.
	 * 
	 */
	@Before
	public void setUp() throws Exception {
		// Create an EntityManagerFactory from which an EntityManager can be 
		// requested. The argument to createEntityManagerFactory() is the name
		// of a persistence unit, named in META-INF/persistence.xml. The 
		// factory configures itself based on reading the xml file. 
		// persistence.xml must contain a persistence unit named, in this case,
		// "nz.ac.auckland.hello".
		entityManagerFactory = Persistence.createEntityManagerFactory( "nz.ac.auckland.hello" );
	}

	/**
	 * Runs after each test to destroy the EntityManagerFactory.
	 * 
	 */
	@After
	public void tearDown() throws Exception {
		// Close the EntityManagerFactory once all tests have executed.
		entityManagerFactory.close();
	}
	
	@Test
	public void testMusicianPersistance(){
		logger.info("Starting test");
		PersistanceManager2 manager = new PersistanceManager2();
		
		Calendar cal = Calendar.getInstance();
		cal.set(1963, 8, 3);
		Musician het = new Musician(1, "Hetfield", "James", Gender.MALE, Experience.PROFESSIONAL, cal, Instrument.GUITAR);
		
		cal.set(1994, 7, 3);
		Musician pri = new Musician(2, "Singh", "Priyankit", Gender.MALE, Experience.ADVANCED, cal, Instrument.GUITAR);
		
		manager.addMusicianToDatabase(het);
		manager.addMusicianToDatabase(pri);
		
		// Query the database here
	}

}
